{"ast":null,"code":"var _jsxFileName = \"A:\\\\WorkPorjects\\\\Skill Box\\\\greencosmicStudy\\\\Frontend\\\\src\\\\Components\\\\Courses\\\\CoursesMenu\\\\CoursesPersonal\\\\Types\\\\Test.jsx\",\n    _s = $RefreshSig$();\n\nimport style from \"./types.module.css\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Test(props) {\n  _s();\n\n  console.log(props);\n  const [myQuestion, setMyQuestion] = useState(\"\");\n  const [myAnswer, setMyAnswer] = useState(\"\");\n  const [selected, setSelected] = useState(\"\");\n\n  function check() {\n    if (myAnswer) {}\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: style.blockContainer,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: style.blockName,\n        children: props.stepName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [props.stepContent.map(content => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: style.optionContainer,\n            children: content.question == myQuestion ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: style.selected,\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                onClick: () => {\n                  setSelected(\"style.selected\");\n                  setMyAnswer(content.answer);\n                  setMyQuestion(content.question);\n                },\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: style.option,\n                  children: content.question\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 29,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 22,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 21,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n              onClick: () => {\n                setSelected(\"style.selected\");\n                setMyAnswer(content.answer);\n                setMyQuestion(content.question);\n              },\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: style.option,\n                children: content.question\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 40,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 15\n          }, this);\n        }), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: style.checkAnswerContainer,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: style.checkAnswer,\n            onClick: () => {},\n            children: \"Check Right Answer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Test, \"W3/9EPmPM32UJn6nQAuKXs5+QGk=\");\n\n_c = Test;\nexport default Test;\n\nvar _c;\n\n$RefreshReg$(_c, \"Test\");","map":{"version":3,"sources":["A:/WorkPorjects/Skill Box/greencosmicStudy/Frontend/src/Components/Courses/CoursesMenu/CoursesPersonal/Types/Test.jsx"],"names":["style","useState","Test","props","console","log","myQuestion","setMyQuestion","myAnswer","setMyAnswer","selected","setSelected","check","blockContainer","blockName","stepName","stepContent","map","content","optionContainer","question","answer","option","checkAnswerContainer","checkAnswer"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,oBAAlB;AACA,SAASC,QAAT,QAAyB,OAAzB;;;AACA,SAASC,IAAT,CAAcC,KAAd,EAAqB;AAAA;;AACnBC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,QAAM,CAACG,UAAD,EAAaC,aAAb,IAA8BN,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACO,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACS,QAAD,EAAWC,WAAX,IAA0BV,QAAQ,CAAC,EAAD,CAAxC;;AACA,WAASW,KAAT,GAAiB;AACf,QAAIJ,QAAJ,EAAc,CACb;AACF;;AACD,sBACE;AAAK,IAAA,SAAS,EAAER,KAAK,CAACa,cAAtB;AAAA,2BACE;AAAA,8BACE;AAAK,QAAA,SAAS,EAAEb,KAAK,CAACc,SAAtB;AAAA,kBAAkCX,KAAK,CAACY;AAAxC;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,mBACGZ,KAAK,CAACa,WAAN,CAAkBC,GAAlB,CAAuBC,OAAD,IAAa;AAClC,8BACE;AAAK,YAAA,SAAS,EAAElB,KAAK,CAACmB,eAAtB;AAAA,sBACGD,OAAO,CAACE,QAAR,IAAoBd,UAApB,gBACC;AAAK,cAAA,SAAS,EAAEN,KAAK,CAACU,QAAtB;AAAA,qCACE;AACE,gBAAA,OAAO,EAAE,MAAM;AACbC,kBAAAA,WAAW,CAAC,gBAAD,CAAX;AACAF,kBAAAA,WAAW,CAACS,OAAO,CAACG,MAAT,CAAX;AACAd,kBAAAA,aAAa,CAACW,OAAO,CAACE,QAAT,CAAb;AACD,iBALH;AAAA,uCAOE;AAAK,kBAAA,SAAS,EAAEpB,KAAK,CAACsB,MAAtB;AAAA,4BAA+BJ,OAAO,CAACE;AAAvC;AAAA;AAAA;AAAA;AAAA;AAPF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBADD,gBAaC;AACE,cAAA,OAAO,EAAE,MAAM;AACbT,gBAAAA,WAAW,CAAC,gBAAD,CAAX;AACAF,gBAAAA,WAAW,CAACS,OAAO,CAACG,MAAT,CAAX;AACAd,gBAAAA,aAAa,CAACW,OAAO,CAACE,QAAT,CAAb;AACD,eALH;AAAA,qCAOE;AAAK,gBAAA,SAAS,EAAEpB,KAAK,CAACsB,MAAtB;AAAA,0BAA+BJ,OAAO,CAACE;AAAvC;AAAA;AAAA;AAAA;AAAA;AAPF;AAAA;AAAA;AAAA;AAAA;AAdJ;AAAA;AAAA;AAAA;AAAA,kBADF;AA2BD,SA5BA,CADH,eA8BE;AAAK,UAAA,SAAS,EAAEpB,KAAK,CAACuB,oBAAtB;AAAA,iCACE;AAAK,YAAA,SAAS,EAAEvB,KAAK,CAACwB,WAAtB;AAAmC,YAAA,OAAO,EAAE,MAAM,CAAE,CAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBA9BF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AA2CD;;GApDQtB,I;;KAAAA,I;AAqDT,eAAeA,IAAf","sourcesContent":["import style from \"./types.module.css\";\r\nimport { useState } from \"react\";\r\nfunction Test(props) {\r\n  console.log(props);\r\n  const [myQuestion, setMyQuestion] = useState(\"\");\r\n  const [myAnswer, setMyAnswer] = useState(\"\");\r\n  const [selected, setSelected] = useState(\"\");\r\n  function check() {\r\n    if (myAnswer) {\r\n    }\r\n  }\r\n  return (\r\n    <div className={style.blockContainer}>\r\n      <div>\r\n        <div className={style.blockName}>{props.stepName}</div>\r\n        <div>\r\n          {props.stepContent.map((content) => {\r\n            return (\r\n              <div className={style.optionContainer}>\r\n                {content.question == myQuestion ? (\r\n                  <div className={style.selected}>\r\n                    <div\r\n                      onClick={() => {\r\n                        setSelected(\"style.selected\");\r\n                        setMyAnswer(content.answer);\r\n                        setMyQuestion(content.question);\r\n                      }}\r\n                    >\r\n                      <div className={style.option}>{content.question}</div>\r\n                    </div>\r\n                  </div>\r\n                ) : (\r\n                  <div\r\n                    onClick={() => {\r\n                      setSelected(\"style.selected\");\r\n                      setMyAnswer(content.answer);\r\n                      setMyQuestion(content.question);\r\n                    }}\r\n                  >\r\n                    <div className={style.option}>{content.question}</div>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            );\r\n          })}\r\n          <div className={style.checkAnswerContainer}>\r\n            <div className={style.checkAnswer} onClick={() => {}}>\r\n              Check Right Answer\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default Test;\r\n"]},"metadata":{},"sourceType":"module"}