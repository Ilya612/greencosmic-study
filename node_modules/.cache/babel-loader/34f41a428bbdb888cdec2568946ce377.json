{"ast":null,"code":"const SET_USER = \"SET_USER\";\nconst GET_USER = \"GET_USER\";\nconst REFRESH_TOKEN = \"REFRESH_TOKEN\";\nconst IS_AUTH = \"IS_AUTH\";\nlet initialState = {\n  token: \"\",\n  username: \"\",\n  _id: \"\",\n  role: \"\",\n  isAuth: false,\n  birthday: \"\"\n};\n\nconst userReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case SET_USER:\n      return { ...state,\n        token: action.user.token,\n        username: action.user.username,\n        _id: action.user._id,\n        role: action.user.role\n      };\n\n    case GET_USER:\n      debugger;\n      console.log(state);\n      break;\n\n    case IS_AUTH:\n      return { ...state,\n        isAuth: action.value\n      };\n\n    case REFRESH_TOKEN:\n      return { ...state,\n        token: action.value.accessToken,\n        username: action.value.user.username,\n        _id: action.value.user.id,\n        role: action.value.user.roles\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default userReducer;\nexport const setUser = user => ({\n  type: SET_USER,\n  user\n});\nexport const getUser = () => ({\n  type: GET_USER\n});\nexport const isAuth = value => ({\n  type: IS_AUTH,\n  value\n});\nexport const refreshToken = value => ({\n  type: REFRESH_TOKEN,\n  value\n});","map":{"version":3,"sources":["A:/WorkPorjects/Skill Box/greencosmicStudy/Frontend/src/Redux/Reducers/userReducer.js"],"names":["SET_USER","GET_USER","REFRESH_TOKEN","IS_AUTH","initialState","token","username","_id","role","isAuth","birthday","userReducer","state","action","type","user","console","log","value","accessToken","id","roles","setUser","getUser","refreshToken"],"mappings":"AAAA,MAAMA,QAAQ,GAAG,UAAjB;AACA,MAAMC,QAAQ,GAAG,UAAjB;AACA,MAAMC,aAAa,GAAG,eAAtB;AAEA,MAAMC,OAAO,GAAG,SAAhB;AAEA,IAAIC,YAAY,GAAG;AACjBC,EAAAA,KAAK,EAAE,EADU;AAEjBC,EAAAA,QAAQ,EAAE,EAFO;AAGjBC,EAAAA,GAAG,EAAE,EAHY;AAIjBC,EAAAA,IAAI,EAAE,EAJW;AAKjBC,EAAAA,MAAM,EAAE,KALS;AAMjBC,EAAAA,QAAQ,EAAE;AANO,CAAnB;;AASA,MAAMC,WAAW,GAAG,YAAkC;AAAA,MAAjCC,KAAiC,uEAAzBR,YAAyB;AAAA,MAAXS,MAAW;;AACpD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKd,QAAL;AACE,aAAO,EACL,GAAGY,KADE;AAELP,QAAAA,KAAK,EAAEQ,MAAM,CAACE,IAAP,CAAYV,KAFd;AAGLC,QAAAA,QAAQ,EAAEO,MAAM,CAACE,IAAP,CAAYT,QAHjB;AAILC,QAAAA,GAAG,EAAEM,MAAM,CAACE,IAAP,CAAYR,GAJZ;AAKLC,QAAAA,IAAI,EAAEK,MAAM,CAACE,IAAP,CAAYP;AALb,OAAP;;AAOF,SAAKP,QAAL;AACE;AACAe,MAAAA,OAAO,CAACC,GAAR,CAAYL,KAAZ;AACA;;AACF,SAAKT,OAAL;AACE,aAAO,EACL,GAAGS,KADE;AAELH,QAAAA,MAAM,EAAEI,MAAM,CAACK;AAFV,OAAP;;AAIF,SAAKhB,aAAL;AACE,aAAO,EACL,GAAGU,KADE;AAELP,QAAAA,KAAK,EAAEQ,MAAM,CAACK,KAAP,CAAaC,WAFf;AAGLb,QAAAA,QAAQ,EAAEO,MAAM,CAACK,KAAP,CAAaH,IAAb,CAAkBT,QAHvB;AAILC,QAAAA,GAAG,EAAEM,MAAM,CAACK,KAAP,CAAaH,IAAb,CAAkBK,EAJlB;AAKLZ,QAAAA,IAAI,EAAEK,MAAM,CAACK,KAAP,CAAaH,IAAb,CAAkBM;AALnB,OAAP;;AAQF;AACE,aAAOT,KAAP;AA5BJ;AA8BD,CA/BD;;AAiCA,eAAeD,WAAf;AAEA,OAAO,MAAMW,OAAO,GAAIP,IAAD,KAAW;AAChCD,EAAAA,IAAI,EAAEd,QAD0B;AAEhCe,EAAAA;AAFgC,CAAX,CAAhB;AAIP,OAAO,MAAMQ,OAAO,GAAG,OAAO;AAC5BT,EAAAA,IAAI,EAAEb;AADsB,CAAP,CAAhB;AAIP,OAAO,MAAMQ,MAAM,GAAIS,KAAD,KAAY;AAChCJ,EAAAA,IAAI,EAAEX,OAD0B;AAEhCe,EAAAA;AAFgC,CAAZ,CAAf;AAIP,OAAO,MAAMM,YAAY,GAAIN,KAAD,KAAY;AACtCJ,EAAAA,IAAI,EAAEZ,aADgC;AAEtCgB,EAAAA;AAFsC,CAAZ,CAArB","sourcesContent":["const SET_USER = \"SET_USER\";\r\nconst GET_USER = \"GET_USER\";\r\nconst REFRESH_TOKEN = \"REFRESH_TOKEN\";\r\n\r\nconst IS_AUTH = \"IS_AUTH\";\r\n\r\nlet initialState = {\r\n  token: \"\",\r\n  username: \"\",\r\n  _id: \"\",\r\n  role: \"\",\r\n  isAuth: false,\r\n  birthday: \"\",\r\n};\r\n\r\nconst userReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_USER:\r\n      return {\r\n        ...state,\r\n        token: action.user.token,\r\n        username: action.user.username,\r\n        _id: action.user._id,\r\n        role: action.user.role,\r\n      };\r\n    case GET_USER:\r\n      debugger;\r\n      console.log(state);\r\n      break;\r\n    case IS_AUTH:\r\n      return {\r\n        ...state,\r\n        isAuth: action.value,\r\n      };\r\n    case REFRESH_TOKEN:\r\n      return {\r\n        ...state,\r\n        token: action.value.accessToken,\r\n        username: action.value.user.username,\r\n        _id: action.value.user.id,\r\n        role: action.value.user.roles,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default userReducer;\r\n\r\nexport const setUser = (user) => ({\r\n  type: SET_USER,\r\n  user,\r\n});\r\nexport const getUser = () => ({\r\n  type: GET_USER,\r\n});\r\n\r\nexport const isAuth = (value) => ({\r\n  type: IS_AUTH,\r\n  value,\r\n});\r\nexport const refreshToken = (value) => ({\r\n  type: REFRESH_TOKEN,\r\n  value,\r\n});\r\n"]},"metadata":{},"sourceType":"module"}