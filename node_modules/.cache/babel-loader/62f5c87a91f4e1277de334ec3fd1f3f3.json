{"ast":null,"code":"var _jsxFileName = \"A:\\\\WorkPorjects\\\\Skill Box\\\\test 0\\\\Frontend\\\\src\\\\Components\\\\Authentication\\\\LoginContainer.jsx\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport $api from \"../../Http/index.js\";\nimport { setUser, isAuth } from \"../../Redux/Reducers/userReducer.js\";\nimport { loading } from \"../../Redux/Reducers/loadingReducer.js\";\nimport Login from \"./Login.jsx\";\nimport Preloader from \"../../Assets/Preloader/PreloaderPage.jsx\";\nimport { Redirect } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass LoginContainer extends React.Component {\n  constructor() {\n    super(...arguments);\n\n    this.login = _ref => {\n      let {\n        password,\n        email\n      } = _ref;\n      $api.post(\"/login\", {\n        email,\n        password\n      }).then(response => {\n        console.log(response);\n        let user = {\n          token: response.data.accessToken,\n          username: response.data.user.username\n        };\n        this.props.setUser(user);\n        this.props.loading(false);\n        this.props.isAuth(true);\n      }).catch(error => {\n        this.props.loading(false);\n        console.log(\"wrong auth\");\n        console.log(error);\n      });\n    };\n  }\n\n  render() {\n    const auth = this.props.state.user.isAuth;\n    console.log(auth);\n    console.log(this.props);\n\n    if (auth === true) {\n      return /*#__PURE__*/_jsxDEV(Redirect, {\n        to: \"/courses\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 14\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: this.props.state.isLoading.isLoading ? /*#__PURE__*/_jsxDEV(Preloader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Login, {\n        state: this.props.state,\n        login: this.login,\n        setUser: this.props.setUser,\n        loading: this.props.loading,\n        isAuth: this.props.isAuth\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    state: state\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setUser: user => dispatch(setUser(user)),\n    loading: isLoading => dispatch(loading(isLoading)),\n    isAuth: value => dispatch(isAuth(value)) //  auth: () => dispatch(auth()),\n\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginContainer);","map":{"version":3,"sources":["A:/WorkPorjects/Skill Box/test 0/Frontend/src/Components/Authentication/LoginContainer.jsx"],"names":["React","connect","$api","setUser","isAuth","loading","Login","Preloader","Redirect","LoginContainer","Component","login","password","email","post","then","response","console","log","user","token","data","accessToken","username","props","catch","error","render","auth","state","isLoading","mapStateToProps","mapDispatchToProps","dispatch","value"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport $api from \"../../Http/index.js\";\r\nimport { setUser, isAuth } from \"../../Redux/Reducers/userReducer.js\";\r\nimport { loading } from \"../../Redux/Reducers/loadingReducer.js\";\r\nimport Login from \"./Login.jsx\";\r\nimport Preloader from \"../../Assets/Preloader/PreloaderPage.jsx\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nclass LoginContainer extends React.Component {\r\n  login = ({ password, email }) => {\r\n    $api\r\n      .post(\"/login\", { email, password })\r\n      .then((response) => {\r\n        console.log(response);\r\n        let user = {\r\n          token: response.data.accessToken,\r\n          username: response.data.user.username,\r\n        };\r\n        this.props.setUser(user);\r\n        this.props.loading(false);\r\n        this.props.isAuth(true);\r\n      })\r\n      .catch((error) => {\r\n        this.props.loading(false);\r\n        console.log(\"wrong auth\");\r\n        console.log(error);\r\n      });\r\n  };\r\n  render() {\r\n    const auth = this.props.state.user.isAuth;\r\n    console.log(auth);\r\n    console.log(this.props);\r\n    if (auth === true) {\r\n      return <Redirect to=\"/courses\" />;\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        {this.props.state.isLoading.isLoading ? (\r\n          <Preloader />\r\n        ) : (\r\n          <Login\r\n            state={this.props.state}\r\n            login={this.login}\r\n            setUser={this.props.setUser}\r\n            loading={this.props.loading}\r\n            isAuth={this.props.isAuth}\r\n          />\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    state: state,\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    setUser: (user) => dispatch(setUser(user)),\r\n    loading: (isLoading) => dispatch(loading(isLoading)),\r\n    isAuth: (value) => dispatch(isAuth(value)),\r\n    //  auth: () => dispatch(auth()),\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginContainer);\r\n"]},"metadata":{},"sourceType":"module"}