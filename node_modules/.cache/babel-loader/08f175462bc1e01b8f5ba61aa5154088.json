{"ast":null,"code":"const SET_USER = \"SET_USER\";\nconst GET_USER = \"GET_USER\";\nconst REFRESH_TOKEN = \"REFRESH_TOKEN\";\nconst AUTH = \"AUTH\";\nconst IS_AUTH = \"IS_AUTH\";\nconst ADD_STEP = \"ADD_STEP\";\nlet initialState = {\n  token: \"\",\n  username: \"\",\n  _id: \"\",\n  role: \"\",\n  isAuth: false,\n  addStep: false\n};\n\nconst userReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case SET_USER:\n      return { ...state,\n        token: action.user.token,\n        username: action.user.username,\n        _id: action.user._id,\n        role: action.user.role\n      };\n\n    case GET_USER:\n      debugger;\n      console.log(state);\n      break;\n\n    case IS_AUTH:\n      return { ...state,\n        isAuth: action.value\n      };\n\n    case REFRESH_TOKEN:\n      return { ...state,\n        token: action.value\n      };\n\n    case ADD_STEP:\n      return { ...state,\n        addStep: action.value\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default userReducer;\nexport const setUser = user => ({\n  type: SET_USER,\n  user\n});\nexport const getUser = () => ({\n  type: GET_USER\n});\nexport const auth = () => ({\n  type: AUTH\n});\nexport const isAuth = value => ({\n  type: IS_AUTH,\n  value\n});\nexport const refreshToken = value => ({\n  type: REFRESH_TOKEN,\n  value\n});\nexport const addStep = value => ({\n  type: ADD_STEP,\n  value\n});","map":{"version":3,"sources":["A:/WorkPorjects/Skill Box/test 0/Frontend/src/Redux/Reducers/userReducer.js"],"names":["SET_USER","GET_USER","REFRESH_TOKEN","AUTH","IS_AUTH","ADD_STEP","initialState","token","username","_id","role","isAuth","addStep","userReducer","state","action","type","user","console","log","value","setUser","getUser","auth","refreshToken"],"mappings":"AAAA,MAAMA,QAAQ,GAAG,UAAjB;AACA,MAAMC,QAAQ,GAAG,UAAjB;AACA,MAAMC,aAAa,GAAG,eAAtB;AACA,MAAMC,IAAI,GAAG,MAAb;AACA,MAAMC,OAAO,GAAG,SAAhB;AACA,MAAMC,QAAQ,GAAG,UAAjB;AAEA,IAAIC,YAAY,GAAG;AACjBC,EAAAA,KAAK,EAAE,EADU;AAEjBC,EAAAA,QAAQ,EAAE,EAFO;AAGjBC,EAAAA,GAAG,EAAE,EAHY;AAIjBC,EAAAA,IAAI,EAAE,EAJW;AAKjBC,EAAAA,MAAM,EAAE,KALS;AAMjBC,EAAAA,OAAO,EAAE;AANQ,CAAnB;;AASA,MAAMC,WAAW,GAAG,YAAkC;AAAA,MAAjCC,KAAiC,uEAAzBR,YAAyB;AAAA,MAAXS,MAAW;;AACpD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKhB,QAAL;AACE,aAAO,EACL,GAAGc,KADE;AAELP,QAAAA,KAAK,EAAEQ,MAAM,CAACE,IAAP,CAAYV,KAFd;AAGLC,QAAAA,QAAQ,EAAEO,MAAM,CAACE,IAAP,CAAYT,QAHjB;AAILC,QAAAA,GAAG,EAAEM,MAAM,CAACE,IAAP,CAAYR,GAJZ;AAKLC,QAAAA,IAAI,EAAEK,MAAM,CAACE,IAAP,CAAYP;AALb,OAAP;;AAOF,SAAKT,QAAL;AACE;AACAiB,MAAAA,OAAO,CAACC,GAAR,CAAYL,KAAZ;AACA;;AACF,SAAKV,OAAL;AACE,aAAO,EACL,GAAGU,KADE;AAELH,QAAAA,MAAM,EAAEI,MAAM,CAACK;AAFV,OAAP;;AAIF,SAAKlB,aAAL;AACE,aAAO,EACL,GAAGY,KADE;AAELP,QAAAA,KAAK,EAAEQ,MAAM,CAACK;AAFT,OAAP;;AAIF,SAAKf,QAAL;AACE,aAAO,EACL,GAAGS,KADE;AAELF,QAAAA,OAAO,EAAEG,MAAM,CAACK;AAFX,OAAP;;AAIF;AACE,aAAON,KAAP;AA7BJ;AA+BD,CAhCD;;AAkCA,eAAeD,WAAf;AAEA,OAAO,MAAMQ,OAAO,GAAIJ,IAAD,KAAW;AAChCD,EAAAA,IAAI,EAAEhB,QAD0B;AAEhCiB,EAAAA;AAFgC,CAAX,CAAhB;AAIP,OAAO,MAAMK,OAAO,GAAG,OAAO;AAC5BN,EAAAA,IAAI,EAAEf;AADsB,CAAP,CAAhB;AAGP,OAAO,MAAMsB,IAAI,GAAG,OAAO;AACzBP,EAAAA,IAAI,EAAEb;AADmB,CAAP,CAAb;AAGP,OAAO,MAAMQ,MAAM,GAAIS,KAAD,KAAY;AAChCJ,EAAAA,IAAI,EAAEZ,OAD0B;AAEhCgB,EAAAA;AAFgC,CAAZ,CAAf;AAIP,OAAO,MAAMI,YAAY,GAAIJ,KAAD,KAAY;AACtCJ,EAAAA,IAAI,EAAEd,aADgC;AAEtCkB,EAAAA;AAFsC,CAAZ,CAArB;AAIP,OAAO,MAAMR,OAAO,GAAIQ,KAAD,KAAY;AACjCJ,EAAAA,IAAI,EAAEX,QAD2B;AAEjCe,EAAAA;AAFiC,CAAZ,CAAhB","sourcesContent":["const SET_USER = \"SET_USER\";\r\nconst GET_USER = \"GET_USER\";\r\nconst REFRESH_TOKEN = \"REFRESH_TOKEN\";\r\nconst AUTH = \"AUTH\";\r\nconst IS_AUTH = \"IS_AUTH\";\r\nconst ADD_STEP = \"ADD_STEP\";\r\n\r\nlet initialState = {\r\n  token: \"\",\r\n  username: \"\",\r\n  _id: \"\",\r\n  role: \"\",\r\n  isAuth: false,\r\n  addStep: false,\r\n};\r\n\r\nconst userReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_USER:\r\n      return {\r\n        ...state,\r\n        token: action.user.token,\r\n        username: action.user.username,\r\n        _id: action.user._id,\r\n        role: action.user.role,\r\n      };\r\n    case GET_USER:\r\n      debugger;\r\n      console.log(state);\r\n      break;\r\n    case IS_AUTH:\r\n      return {\r\n        ...state,\r\n        isAuth: action.value,\r\n      };\r\n    case REFRESH_TOKEN:\r\n      return {\r\n        ...state,\r\n        token: action.value,\r\n      };\r\n    case ADD_STEP:\r\n      return {\r\n        ...state,\r\n        addStep: action.value,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default userReducer;\r\n\r\nexport const setUser = (user) => ({\r\n  type: SET_USER,\r\n  user,\r\n});\r\nexport const getUser = () => ({\r\n  type: GET_USER,\r\n});\r\nexport const auth = () => ({\r\n  type: AUTH,\r\n});\r\nexport const isAuth = (value) => ({\r\n  type: IS_AUTH,\r\n  value,\r\n});\r\nexport const refreshToken = (value) => ({\r\n  type: REFRESH_TOKEN,\r\n  value,\r\n});\r\nexport const addStep = (value) => ({\r\n  type: ADD_STEP,\r\n  value,\r\n});\r\n"]},"metadata":{},"sourceType":"module"}