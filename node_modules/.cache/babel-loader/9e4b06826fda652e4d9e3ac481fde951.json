{"ast":null,"code":"var _jsxFileName = \"A:\\\\WorkPorjects\\\\Skill Box\\\\greencosmicStudy\\\\Frontend\\\\src\\\\Components\\\\Courses\\\\CoursesMenu\\\\CoursesPersonal\\\\Types\\\\Test.jsx\",\n    _s = $RefreshSig$();\n\nimport style from \"./types.module.css\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Test(props) {\n  _s();\n\n  const [myQuestion, setMyQuestion] = useState(\"\");\n  const [myAnswer, setMyAnswer] = useState(\"\");\n  const [selected, setSelected] = useState(\"\");\n  const [right, setRight] = useState(false);\n\n  if (!right) {\n    props.setBlock(true);\n  }\n\n  function check() {\n    //setRight(false);\n    if (myAnswer) {\n      setRight(true);\n      props.setBlock(false);\n      return;\n    }\n\n    return;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: style.blockContainer,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: style.blockName,\n        children: props.stepName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [right ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: style.right,\n          children: props.stepContent.map(content => {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              children: content.question == myQuestion ? /*#__PURE__*/_jsxDEV(\"div\", {\n                className: style.optionContainer,\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  onClick: () => {\n                    setSelected(\"style.selected\");\n                    setMyAnswer(content.answer);\n                    setMyQuestion(content.question);\n                  },\n                  className: style.selected,\n                  children: content.question\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 34,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 33,\n                columnNumber: 23\n              }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                onClick: () => {\n                  setSelected(\"style.selected\");\n                  setMyAnswer(content.answer);\n                  setMyQuestion(content.question);\n                },\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: style.option,\n                  children: content.question\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 53,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 46,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 19\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: style.not,\n          children: props.stepContent.map(content => {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: style.optionContainer,\n              children: content.question == myQuestion ? /*#__PURE__*/_jsxDEV(\"div\", {\n                className: style.selected,\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  onClick: () => {\n                    setSelected(\"style.selected\");\n                    setMyAnswer(content.answer);\n                    setMyQuestion(content.question);\n                  },\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: style.option,\n                    children: content.question\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 74,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 67,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 23\n              }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                onClick: () => {\n                  setSelected(\"style.selected\");\n                  setMyAnswer(content.answer);\n                  setMyQuestion(content.question);\n                },\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: style.option,\n                  children: content.question\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 85,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 19\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: style.checkAnswerContainer,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: style.checkAnswer,\n            onClick: () => {\n              check();\n            },\n            children: \"Check Right Answer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Test, \"FGa4lkGOX97f5nz+gyphWswre3c=\");\n\n_c = Test;\nexport default Test;\n\nvar _c;\n\n$RefreshReg$(_c, \"Test\");","map":{"version":3,"sources":["A:/WorkPorjects/Skill Box/greencosmicStudy/Frontend/src/Components/Courses/CoursesMenu/CoursesPersonal/Types/Test.jsx"],"names":["style","useState","Test","props","myQuestion","setMyQuestion","myAnswer","setMyAnswer","selected","setSelected","right","setRight","setBlock","check","blockContainer","blockName","stepName","stepContent","map","content","question","optionContainer","answer","option","not","checkAnswerContainer","checkAnswer"],"mappings":"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","sourcesContent":["import style from \"./types.module.css\";\r\nimport { useState } from \"react\";\r\nfunction Test(props) {\r\n  const [myQuestion, setMyQuestion] = useState(\"\");\r\n  const [myAnswer, setMyAnswer] = useState(\"\");\r\n  const [selected, setSelected] = useState(\"\");\r\n  const [right, setRight] = useState(false);\r\n  if (!right) {\r\n    props.setBlock(true);\r\n  }\r\n\r\n  function check() {\r\n    //setRight(false);\r\n    if (myAnswer) {\r\n      setRight(true);\r\n      props.setBlock(false);\r\n      return;\r\n    }\r\n    return;\r\n  }\r\n\r\n  return (\r\n    <div className={style.blockContainer}>\r\n      <div>\r\n        <div className={style.blockName}>{props.stepName}</div>\r\n        <div>\r\n          {right ? (\r\n            <div className={style.right}>\r\n              {props.stepContent.map((content) => {\r\n                return (\r\n                  <div>\r\n                    {content.question == myQuestion ? (\r\n                      <div className={style.optionContainer}>\r\n                        <div\r\n                          onClick={() => {\r\n                            setSelected(\"style.selected\");\r\n                            setMyAnswer(content.answer);\r\n                            setMyQuestion(content.question);\r\n                          }}\r\n                          className={style.selected}\r\n                        >\r\n                          {content.question}\r\n                        </div>\r\n                      </div>\r\n                    ) : (\r\n                      <div\r\n                        onClick={() => {\r\n                          setSelected(\"style.selected\");\r\n                          setMyAnswer(content.answer);\r\n                          setMyQuestion(content.question);\r\n                        }}\r\n                      >\r\n                        <div className={style.option}>{content.question}</div>\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                );\r\n              })}\r\n            </div>\r\n          ) : (\r\n            <div className={style.not}>\r\n              {props.stepContent.map((content) => {\r\n                return (\r\n                  <div className={style.optionContainer}>\r\n                    {content.question == myQuestion ? (\r\n                      <div className={style.selected}>\r\n                        <div\r\n                          onClick={() => {\r\n                            setSelected(\"style.selected\");\r\n                            setMyAnswer(content.answer);\r\n                            setMyQuestion(content.question);\r\n                          }}\r\n                        >\r\n                          <div className={style.option}>{content.question}</div>\r\n                        </div>\r\n                      </div>\r\n                    ) : (\r\n                      <div\r\n                        onClick={() => {\r\n                          setSelected(\"style.selected\");\r\n                          setMyAnswer(content.answer);\r\n                          setMyQuestion(content.question);\r\n                        }}\r\n                      >\r\n                        <div className={style.option}>{content.question}</div>\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                );\r\n              })}\r\n            </div>\r\n          )}\r\n\r\n          <div className={style.checkAnswerContainer}>\r\n            <div\r\n              className={style.checkAnswer}\r\n              onClick={() => {\r\n                check();\r\n              }}\r\n            >\r\n              Check Right Answer\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default Test;\r\n"]},"metadata":{},"sourceType":"module"}