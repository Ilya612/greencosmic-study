{"ast":null,"code":"var _jsxFileName = \"A:\\\\WorkPorjects\\\\Skill Box\\\\test 0\\\\Frontend\\\\src\\\\Components\\\\Authentication\\\\AuthenticationContainer.jsx\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport $api from \"../../Http/index.js\";\nimport { setUser } from \"../../Redux/Reducers/userReducer.js\";\nimport { loading, setStatusCode } from \"../../Redux/Reducers/loadingReducer.js\";\nimport Authentication from \"./Authentication.jsx\";\nimport Preloader from \"../../Assets/Preloader/PreloaderPage.jsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass AuthenticationContainer extends React.Component {\n  registration(_ref) {\n    let {\n      username,\n      password,\n      email\n    } = _ref;\n    console.log(this.props);\n    this.props.isLoading.loading(true);\n    $api.post(\"/registration\", {\n      email,\n      password,\n      username\n    }).then(response => {\n      console.log(this.props);\n      /* let user = {\r\n          token: response.data.accessToken,\r\n          username: response.data.user.username,\r\n        };\r\n        props.setUser(user);*/\n\n      this.props.setStatusCode(response.status);\n      this.props.isLoading.loading(false);\n    }).catch(error => {\n      this.props.isLoading.loading(false);\n      console.log(error);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: this.props.state.isLoading.isLoading ? /*#__PURE__*/_jsxDEV(Preloader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Authentication, {\n        state: this.props.state,\n        registration: this.registration\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this);\n  }\n\n} //console.log(AuthenticationContainer);\n\n\nconst mapStateToProps = state => {\n  return {\n    state: state\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setUser: user => dispatch(setUser(user)),\n    loading: isLoading => dispatch(loading(isLoading)),\n    setStatusCode: value => dispatch(setStatusCode(value))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AuthenticationContainer);","map":{"version":3,"sources":["A:/WorkPorjects/Skill Box/test 0/Frontend/src/Components/Authentication/AuthenticationContainer.jsx"],"names":["React","connect","$api","setUser","loading","setStatusCode","Authentication","Preloader","AuthenticationContainer","Component","registration","username","password","email","console","log","props","isLoading","post","then","response","status","catch","error","render","state","mapStateToProps","mapDispatchToProps","dispatch","user","value"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,IAAP,MAAiB,qBAAjB;AACA,SAASC,OAAT,QAAwB,qCAAxB;AACA,SAASC,OAAT,EAAkBC,aAAlB,QAAuC,wCAAvC;AACA,OAAOC,cAAP,MAA2B,sBAA3B;AACA,OAAOC,SAAP,MAAsB,0CAAtB;;;AAEA,MAAMC,uBAAN,SAAsCR,KAAK,CAACS,SAA5C,CAAsD;AACpDC,EAAAA,YAAY,OAAgC;AAAA,QAA/B;AAAEC,MAAAA,QAAF;AAAYC,MAAAA,QAAZ;AAAsBC,MAAAA;AAAtB,KAA+B;AAC1CC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAjB;AACA,SAAKA,KAAL,CAAWC,SAAX,CAAqBb,OAArB,CAA6B,IAA7B;AACAF,IAAAA,IAAI,CACDgB,IADH,CACQ,eADR,EACyB;AAAEL,MAAAA,KAAF;AAASD,MAAAA,QAAT;AAAmBD,MAAAA;AAAnB,KADzB,EAEGQ,IAFH,CAESC,QAAD,IAAc;AAClBN,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAjB;AACA;AACR;AACA;AACA;AACA;;AACQ,WAAKA,KAAL,CAAWX,aAAX,CAAyBe,QAAQ,CAACC,MAAlC;AACA,WAAKL,KAAL,CAAWC,SAAX,CAAqBb,OAArB,CAA6B,KAA7B;AACD,KAXH,EAYGkB,KAZH,CAYUC,KAAD,IAAW;AAChB,WAAKP,KAAL,CAAWC,SAAX,CAAqBb,OAArB,CAA6B,KAA7B;AACAU,MAAAA,OAAO,CAACC,GAAR,CAAYQ,KAAZ;AACD,KAfH;AAgBD;;AACDC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,gBACG,KAAKR,KAAL,CAAWS,KAAX,CAAiBR,SAAjB,CAA2BA,SAA3B,gBACC,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,cADD,gBAGC,QAAC,cAAD;AACE,QAAA,KAAK,EAAE,KAAKD,KAAL,CAAWS,KADpB;AAEE,QAAA,YAAY,EAAE,KAAKf;AAFrB;AAAA;AAAA;AAAA;AAAA;AAJJ;AAAA;AAAA;AAAA;AAAA,YADF;AAYD;;AAlCmD,C,CAoCtD;;;AACA,MAAMgB,eAAe,GAAID,KAAD,IAAW;AACjC,SAAO;AACLA,IAAAA,KAAK,EAAEA;AADF,GAAP;AAGD,CAJD;;AAKA,MAAME,kBAAkB,GAAIC,QAAD,IAAc;AACvC,SAAO;AACLzB,IAAAA,OAAO,EAAG0B,IAAD,IAAUD,QAAQ,CAACzB,OAAO,CAAC0B,IAAD,CAAR,CADtB;AAELzB,IAAAA,OAAO,EAAGa,SAAD,IAAeW,QAAQ,CAACxB,OAAO,CAACa,SAAD,CAAR,CAF3B;AAGLZ,IAAAA,aAAa,EAAGyB,KAAD,IAAWF,QAAQ,CAACvB,aAAa,CAACyB,KAAD,CAAd;AAH7B,GAAP;AAKD,CAND;;AAOA,eAAe7B,OAAO,CACpByB,eADoB,EAEpBC,kBAFoB,CAAP,CAGbnB,uBAHa,CAAf","sourcesContent":["import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport $api from \"../../Http/index.js\";\r\nimport { setUser } from \"../../Redux/Reducers/userReducer.js\";\r\nimport { loading, setStatusCode } from \"../../Redux/Reducers/loadingReducer.js\";\r\nimport Authentication from \"./Authentication.jsx\";\r\nimport Preloader from \"../../Assets/Preloader/PreloaderPage.jsx\";\r\n\r\nclass AuthenticationContainer extends React.Component {\r\n  registration({ username, password, email }) {\r\n    console.log(this.props);\r\n    this.props.isLoading.loading(true);\r\n    $api\r\n      .post(\"/registration\", { email, password, username })\r\n      .then((response) => {\r\n        console.log(this.props);\r\n        /* let user = {\r\n            token: response.data.accessToken,\r\n            username: response.data.user.username,\r\n          };\r\n          props.setUser(user);*/\r\n        this.props.setStatusCode(response.status);\r\n        this.props.isLoading.loading(false);\r\n      })\r\n      .catch((error) => {\r\n        this.props.isLoading.loading(false);\r\n        console.log(error);\r\n      });\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        {this.props.state.isLoading.isLoading ? (\r\n          <Preloader />\r\n        ) : (\r\n          <Authentication\r\n            state={this.props.state}\r\n            registration={this.registration}\r\n          />\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n//console.log(AuthenticationContainer);\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    state: state,\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    setUser: (user) => dispatch(setUser(user)),\r\n    loading: (isLoading) => dispatch(loading(isLoading)),\r\n    setStatusCode: (value) => dispatch(setStatusCode(value)),\r\n  };\r\n};\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(AuthenticationContainer);\r\n"]},"metadata":{},"sourceType":"module"}