{"ast":null,"code":"const SET_COURSES = \"SET_COURSES\";\nconst ADD_STEP = \"ADD_STEP\";\nconst CREATE_COURSE = \"CREATE_COURSE\";\nconst UPDATE_COURSE = \"UPDATE_COURSE\";\nconst PUSH_COURSE = \"PUSH_COURSE\";\nconst COURSE_TITLE = \"COURSE_TITLE\";\nconst SET_PERSONAL_COURSE = \"SET_PERSONAL_COURSE\";\nconst SET_TOTAL_PAGES_COUNT = \"SET_TOTAL_PAGES_COUNT\";\nconst SET_COURSE_ID = \"SET_COURSE_ID\";\nconst SET_CURRENT_PAGE = \"SET_CURRENT_PAGE\";\nconst SET_PERSONAL_PROGRESS = \"SET_PERSONAL_PROGRESS\";\nconst SET_CURRENT_COURSE_NAME = \"SET_CURRENT_COURSE_NAME\";\nconst SET_LESSONS = \"SET_LESSONS\";\nconst SET_CURRENT_LESSON_NAME = \"SET_CURRENT_LESSON\";\nlet initialState = {\n  courses: [{\n    id: 0\n  }, {\n    id: 1\n  }],\n  courseTitle: \"\",\n  stepsLength: [],\n  userCourses: \"\",\n  personalCourse: \"\",\n  currentPage: 0,\n  totalPagesCount: 0,\n  currentCourseName: \"\",\n  lessons: \"\",\n  currentLessonName: \"\",\n  ////////////////////\n  courseId: \"\",\n  personalProgress: \"\"\n};\n\nconst courseReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case SET_CURRENT_LESSON_NAME:\n      return { ...state,\n        currentLessonName: action.value\n      };\n\n    case SET_LESSONS:\n      return { ...state,\n        lessons: action.value\n      };\n\n    case SET_CURRENT_COURSE_NAME:\n      return { ...state,\n        currentCourseName: action.value\n      };\n\n    case SET_COURSES:\n      return { ...state,\n        userCourses: action.value\n      };\n\n    case ADD_STEP:\n      let stepsLength = state.stepsLength;\n      stepsLength.push(action.value);\n      return { ...state,\n        stepsLength: stepsLength\n      };\n\n    case CREATE_COURSE:\n      return { ...state,\n        courses: action.value\n      };\n\n    case COURSE_TITLE:\n      return { ...state,\n        courseTitle: action.value\n      };\n\n    case UPDATE_COURSE:\n      let array = state.courses;\n      let i = 0;\n\n      if (array.length === 0) {\n        array.splice(array.length, 0, action.value);\n        pushCourse(array);\n        break;\n      } else {\n        while (i < array.length) {\n          if (array[i].id === action.value.id) {\n            array.splice(i, 1, action.value);\n            pushCourse(array);\n            break;\n          }\n\n          if (i === array.length - 1) {\n            array.splice(array.length + 1, 0, action.value);\n            console.log(array);\n            pushCourse(array);\n            break;\n          }\n\n          i++;\n        }\n      }\n\n      return state;\n\n    case PUSH_COURSE:\n      return { ...state,\n        courses: action.array\n      };\n\n    case SET_PERSONAL_COURSE:\n      return { ...state,\n        personalCourse: action.value\n      };\n\n    case SET_TOTAL_PAGES_COUNT:\n      return { ...state,\n        totalPagesCount: action.value\n      };\n\n    case SET_COURSE_ID:\n      return { ...state,\n        courseId: action.value\n      };\n\n    case SET_CURRENT_PAGE:\n      return { ...state,\n        currentPage: action.value\n      };\n\n    case SET_PERSONAL_PROGRESS:\n      return { ...state,\n        personalProgress: action.value\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default courseReducer;\nexport const setCurrentLessonName = value => ({\n  type: SET_CURRENT_LESSON_NAME,\n  value\n});\nexport const setLessons = value => ({\n  type: SET_LESSONS,\n  value\n});\nexport const setCurrentCourseName = value => ({\n  type: SET_CURRENT_COURSE_NAME,\n  value\n});\n\nconst pushCourse = value => ({\n  type: PUSH_COURSE,\n  value\n});\n\nexport const setCourseTitle = value => ({\n  type: COURSE_TITLE,\n  value\n});\nexport const setCourses = value => ({\n  type: SET_COURSES,\n  value\n});\nexport const addStep = value => ({\n  type: ADD_STEP,\n  value\n});\nexport const createCourse = value => ({\n  type: CREATE_COURSE,\n  value\n});\nexport const updateCourse = value => ({\n  type: UPDATE_COURSE,\n  value\n});\nexport const setPersonalCourse = value => ({\n  type: SET_PERSONAL_COURSE,\n  value\n});\nexport const setTotalPagesCount = value => ({\n  type: SET_TOTAL_PAGES_COUNT,\n  value\n});\nexport const setCourseId = value => ({\n  type: SET_COURSE_ID,\n  value\n});\nexport const setCurrentPage = value => ({\n  type: SET_CURRENT_PAGE,\n  value\n});\nexport const setPersonalProgress = value => ({\n  type: SET_PERSONAL_PROGRESS,\n  value\n});","map":{"version":3,"sources":["A:/WorkPorjects/Skill Box/greencosmicStudy/Frontend/src/Redux/Reducers/coursesReducer.js"],"names":["SET_COURSES","ADD_STEP","CREATE_COURSE","UPDATE_COURSE","PUSH_COURSE","COURSE_TITLE","SET_PERSONAL_COURSE","SET_TOTAL_PAGES_COUNT","SET_COURSE_ID","SET_CURRENT_PAGE","SET_PERSONAL_PROGRESS","SET_CURRENT_COURSE_NAME","SET_LESSONS","SET_CURRENT_LESSON_NAME","initialState","courses","id","courseTitle","stepsLength","userCourses","personalCourse","currentPage","totalPagesCount","currentCourseName","lessons","currentLessonName","courseId","personalProgress","courseReducer","state","action","type","value","push","array","i","length","splice","pushCourse","console","log","setCurrentLessonName","setLessons","setCurrentCourseName","setCourseTitle","setCourses","addStep","createCourse","updateCourse","setPersonalCourse","setTotalPagesCount","setCourseId","setCurrentPage","setPersonalProgress"],"mappings":"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","sourcesContent":["const SET_COURSES = \"SET_COURSES\";\r\nconst ADD_STEP = \"ADD_STEP\";\r\nconst CREATE_COURSE = \"CREATE_COURSE\";\r\nconst UPDATE_COURSE = \"UPDATE_COURSE\";\r\nconst PUSH_COURSE = \"PUSH_COURSE\";\r\nconst COURSE_TITLE = \"COURSE_TITLE\";\r\nconst SET_PERSONAL_COURSE = \"SET_PERSONAL_COURSE\";\r\nconst SET_TOTAL_PAGES_COUNT = \"SET_TOTAL_PAGES_COUNT\";\r\nconst SET_COURSE_ID = \"SET_COURSE_ID\";\r\nconst SET_CURRENT_PAGE = \"SET_CURRENT_PAGE\";\r\nconst SET_PERSONAL_PROGRESS = \"SET_PERSONAL_PROGRESS\";\r\nconst SET_CURRENT_COURSE_NAME = \"SET_CURRENT_COURSE_NAME\";\r\nconst SET_LESSONS = \"SET_LESSONS\";\r\nconst SET_CURRENT_LESSON_NAME = \"SET_CURRENT_LESSON\";\r\n\r\nlet initialState = {\r\n  courses: [{ id: 0 }, { id: 1 }],\r\n  courseTitle: \"\",\r\n  stepsLength: [],\r\n  userCourses: \"\",\r\n  personalCourse: \"\",\r\n  currentPage: 0,\r\n  totalPagesCount: 0,\r\n  currentCourseName: \"\",\r\n  lessons: \"\",\r\n  currentLessonName: \"\",\r\n  ////////////////////\r\n  courseId: \"\",\r\n  personalProgress: \"\",\r\n};\r\n\r\nconst courseReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_CURRENT_LESSON_NAME:\r\n      return {\r\n        ...state,\r\n        currentLessonName: action.value,\r\n      };\r\n    case SET_LESSONS:\r\n      return {\r\n        ...state,\r\n        lessons: action.value,\r\n      };\r\n    case SET_CURRENT_COURSE_NAME:\r\n      return {\r\n        ...state,\r\n        currentCourseName: action.value,\r\n      };\r\n    case SET_COURSES:\r\n      return {\r\n        ...state,\r\n        userCourses: action.value,\r\n      };\r\n    case ADD_STEP:\r\n      let stepsLength = state.stepsLength;\r\n      stepsLength.push(action.value);\r\n      return {\r\n        ...state,\r\n        stepsLength: stepsLength,\r\n      };\r\n    case CREATE_COURSE:\r\n      return {\r\n        ...state,\r\n        courses: action.value,\r\n      };\r\n    case COURSE_TITLE:\r\n      return {\r\n        ...state,\r\n        courseTitle: action.value,\r\n      };\r\n    case UPDATE_COURSE:\r\n      let array = state.courses;\r\n      let i = 0;\r\n      if (array.length === 0) {\r\n        array.splice(array.length, 0, action.value);\r\n        pushCourse(array);\r\n        break;\r\n      } else {\r\n        while (i < array.length) {\r\n          if (array[i].id === action.value.id) {\r\n            array.splice(i, 1, action.value);\r\n            pushCourse(array);\r\n            break;\r\n          }\r\n          if (i === array.length - 1) {\r\n            array.splice(array.length + 1, 0, action.value);\r\n            console.log(array);\r\n            pushCourse(array);\r\n            break;\r\n          }\r\n          i++;\r\n        }\r\n      }\r\n\r\n      return state;\r\n    case PUSH_COURSE:\r\n      return {\r\n        ...state,\r\n        courses: action.array,\r\n      };\r\n    case SET_PERSONAL_COURSE:\r\n      return {\r\n        ...state,\r\n        personalCourse: action.value,\r\n      };\r\n    case SET_TOTAL_PAGES_COUNT:\r\n      return {\r\n        ...state,\r\n        totalPagesCount: action.value,\r\n      };\r\n    case SET_COURSE_ID:\r\n      return {\r\n        ...state,\r\n        courseId: action.value,\r\n      };\r\n    case SET_CURRENT_PAGE:\r\n      return {\r\n        ...state,\r\n        currentPage: action.value,\r\n      };\r\n    case SET_PERSONAL_PROGRESS:\r\n      return {\r\n        ...state,\r\n        personalProgress: action.value,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default courseReducer;\r\nexport const setCurrentLessonName = (value) => ({\r\n  type: SET_CURRENT_LESSON_NAME,\r\n  value,\r\n});\r\nexport const setLessons = (value) => ({\r\n  type: SET_LESSONS,\r\n  value,\r\n});\r\nexport const setCurrentCourseName = (value) => ({\r\n  type: SET_CURRENT_COURSE_NAME,\r\n  value,\r\n});\r\nconst pushCourse = (value) => ({\r\n  type: PUSH_COURSE,\r\n  value,\r\n});\r\nexport const setCourseTitle = (value) => ({\r\n  type: COURSE_TITLE,\r\n  value,\r\n});\r\nexport const setCourses = (value) => ({\r\n  type: SET_COURSES,\r\n  value,\r\n});\r\nexport const addStep = (value) => ({\r\n  type: ADD_STEP,\r\n  value,\r\n});\r\nexport const createCourse = (value) => ({\r\n  type: CREATE_COURSE,\r\n  value,\r\n});\r\nexport const updateCourse = (value) => ({\r\n  type: UPDATE_COURSE,\r\n  value,\r\n});\r\nexport const setPersonalCourse = (value) => ({\r\n  type: SET_PERSONAL_COURSE,\r\n  value,\r\n});\r\nexport const setTotalPagesCount = (value) => ({\r\n  type: SET_TOTAL_PAGES_COUNT,\r\n  value,\r\n});\r\nexport const setCourseId = (value) => ({\r\n  type: SET_COURSE_ID,\r\n  value,\r\n});\r\nexport const setCurrentPage = (value) => ({\r\n  type: SET_CURRENT_PAGE,\r\n  value,\r\n});\r\nexport const setPersonalProgress = (value) => ({\r\n  type: SET_PERSONAL_PROGRESS,\r\n  value,\r\n});\r\n"]},"metadata":{},"sourceType":"module"}