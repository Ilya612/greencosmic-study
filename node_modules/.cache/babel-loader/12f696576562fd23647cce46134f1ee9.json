{"ast":null,"code":"var _jsxFileName = \"A:\\\\WorkPorjects\\\\Skill Box\\\\test 0\\\\Frontend\\\\src\\\\Components\\\\Authentication\\\\AuthenticationContainer.jsx\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport $api from \"../../Http/index.js\";\nimport { setUserAC, getUserAC } from \"../../Redux/Reducers/userReducer.js\"; //import AuthService from \"../../Service/authService.js\";\n\nimport Authentication from \"./Authentication.jsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass AuthenticationContainer extends React.Component {\n  registration(_ref) {\n    let {\n      username,\n      password,\n      email\n    } = _ref;\n\n    try {\n      console.log($api);\n      $api.post(\"/registration\", {\n        email,\n        password,\n        username\n      }).then(response => {\n        console.log(this.props);\n        this.props.setUser({\n          token: response.data.accessToken,\n          username: response.data.user.username\n        });\n        this.props.getUser();\n        console.log(response);\n        console.log(this);\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Authentication, {\n        state: this.props.state,\n        registration: this.registration,\n        setUser: this.props.setUser\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nlet mapStateToProps = state => {\n  return {\n    state: state\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setUser: user => {\n      dispatch(setUserAC(user));\n    },\n    getUser: () => {\n      dispatch(getUserAC());\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AuthenticationContainer);","map":{"version":3,"sources":["A:/WorkPorjects/Skill Box/test 0/Frontend/src/Components/Authentication/AuthenticationContainer.jsx"],"names":["React","connect","$api","setUserAC","getUserAC","Authentication","AuthenticationContainer","Component","registration","username","password","email","console","log","post","then","response","props","setUser","token","data","accessToken","user","getUser","error","render","state","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,IAAP,MAAiB,qBAAjB;AACA,SAASC,SAAT,EAAoBC,SAApB,QAAqC,qCAArC,C,CACA;;AACA,OAAOC,cAAP,MAA2B,sBAA3B;;;AAEA,MAAMC,uBAAN,SAAsCN,KAAK,CAACO,SAA5C,CAAsD;AACpDC,EAAAA,YAAY,OAAgC;AAAA,QAA/B;AAAEC,MAAAA,QAAF;AAAYC,MAAAA,QAAZ;AAAsBC,MAAAA;AAAtB,KAA+B;;AAC1C,QAAI;AACFC,MAAAA,OAAO,CAACC,GAAR,CAAYX,IAAZ;AACAA,MAAAA,IAAI,CACDY,IADH,CACQ,eADR,EACyB;AAAEH,QAAAA,KAAF;AAASD,QAAAA,QAAT;AAAmBD,QAAAA;AAAnB,OADzB,EAEGM,IAFH,CAESC,QAAD,IAAc;AAClBJ,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAKI,KAAjB;AACA,aAAKA,KAAL,CAAWC,OAAX,CAAmB;AACjBC,UAAAA,KAAK,EAAEH,QAAQ,CAACI,IAAT,CAAcC,WADJ;AAEjBZ,UAAAA,QAAQ,EAAEO,QAAQ,CAACI,IAAT,CAAcE,IAAd,CAAmBb;AAFZ,SAAnB;AAIA,aAAKQ,KAAL,CAAWM,OAAX;AACAX,QAAAA,OAAO,CAACC,GAAR,CAAYG,QAAZ;AACAJ,QAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ;AACD,OAXH;AAYD,KAdD,CAcE,OAAOW,KAAP,EAAc;AACdZ,MAAAA,OAAO,CAACC,GAAR,CAAYW,KAAZ;AACD;AACF;;AACDC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,6BACE,QAAC,cAAD;AACE,QAAA,KAAK,EAAE,KAAKR,KAAL,CAAWS,KADpB;AAEE,QAAA,YAAY,EAAE,KAAKlB,YAFrB;AAGE,QAAA,OAAO,EAAE,KAAKS,KAAL,CAAWC;AAHtB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AASD;;AA9BmD;;AAgCtD,IAAIS,eAAe,GAAID,KAAD,IAAW;AAC/B,SAAO;AACLA,IAAAA,KAAK,EAAEA;AADF,GAAP;AAGD,CAJD;;AAKA,MAAME,kBAAkB,GAAIC,QAAD,IAAc;AACvC,SAAO;AACLX,IAAAA,OAAO,EAAGI,IAAD,IAAU;AACjBO,MAAAA,QAAQ,CAAC1B,SAAS,CAACmB,IAAD,CAAV,CAAR;AACD,KAHI;AAILC,IAAAA,OAAO,EAAE,MAAM;AACbM,MAAAA,QAAQ,CAACzB,SAAS,EAAV,CAAR;AACD;AANI,GAAP;AAQD,CATD;;AAUA,eAAeH,OAAO,CACpB0B,eADoB,EAEpBC,kBAFoB,CAAP,CAGbtB,uBAHa,CAAf","sourcesContent":["import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport $api from \"../../Http/index.js\";\r\nimport { setUserAC, getUserAC } from \"../../Redux/Reducers/userReducer.js\";\r\n//import AuthService from \"../../Service/authService.js\";\r\nimport Authentication from \"./Authentication.jsx\";\r\n\r\nclass AuthenticationContainer extends React.Component {\r\n  registration({ username, password, email }) {\r\n    try {\r\n      console.log($api);\r\n      $api\r\n        .post(\"/registration\", { email, password, username })\r\n        .then((response) => {\r\n          console.log(this.props);\r\n          this.props.setUser({\r\n            token: response.data.accessToken,\r\n            username: response.data.user.username,\r\n          });\r\n          this.props.getUser();\r\n          console.log(response);\r\n          console.log(this);\r\n        });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Authentication\r\n          state={this.props.state}\r\n          registration={this.registration}\r\n          setUser={this.props.setUser}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    state: state,\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    setUser: (user) => {\r\n      dispatch(setUserAC(user));\r\n    },\r\n    getUser: () => {\r\n      dispatch(getUserAC());\r\n    },\r\n  };\r\n};\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(AuthenticationContainer);\r\n"]},"metadata":{},"sourceType":"module"}