{"ast":null,"code":"var _jsxFileName = \"A:\\\\WorkPorjects\\\\Skill Box\\\\test 0\\\\Frontend\\\\src\\\\Components\\\\Courses\\\\CoursesMenu\\\\CoursesMenuContainer.jsx\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport $api from \"../../../Http/index.js\";\nimport CoursesMenu from \"./CoursesMenu.jsx\";\nimport { loading } from \"../../Redux/Reducers/loadingReducer.js\";\nimport Preloader from \"../../../Assets/Preloader/PreloaderPage.jsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass CoursesMenuContainer extends React.Component {\n  login(_ref, props) {\n    let {\n      password,\n      email\n    } = _ref;\n\n    try {\n      props.loading(true);\n      $api.post(\"/login\", {\n        email,\n        password\n      }).then(response => {\n        console.log(response);\n        props.loading(false);\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: this.props.state.isLoading.isLoading ? /*#__PURE__*/_jsxDEV(Preloader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(CoursesMenu, {\n        state: this.props.state,\n        loading: this.props.loading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    state: state\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    loading: isLoading => dispatch(loading(isLoading))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CoursesMenuContainer);","map":{"version":3,"sources":["A:/WorkPorjects/Skill Box/test 0/Frontend/src/Components/Courses/CoursesMenu/CoursesMenuContainer.jsx"],"names":["React","connect","$api","CoursesMenu","loading","Preloader","CoursesMenuContainer","Component","login","props","password","email","post","then","response","console","log","error","render","state","isLoading","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,WAAP,MAAwB,mBAAxB;AACA,SAASC,OAAT,QAAwB,wCAAxB;AAEA,OAAOC,SAAP,MAAsB,6CAAtB;;;AACA,MAAMC,oBAAN,SAAmCN,KAAK,CAACO,SAAzC,CAAmD;AACjDC,EAAAA,KAAK,OAAsBC,KAAtB,EAA6B;AAAA,QAA5B;AAAEC,MAAAA,QAAF;AAAYC,MAAAA;AAAZ,KAA4B;;AAChC,QAAI;AACFF,MAAAA,KAAK,CAACL,OAAN,CAAc,IAAd;AACAF,MAAAA,IAAI,CAACU,IAAL,CAAU,QAAV,EAAoB;AAAED,QAAAA,KAAF;AAASD,QAAAA;AAAT,OAApB,EAAyCG,IAAzC,CAA+CC,QAAD,IAAc;AAC1DC,QAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AAEAL,QAAAA,KAAK,CAACL,OAAN,CAAc,KAAd;AACD,OAJD;AAKD,KAPD,CAOE,OAAOa,KAAP,EAAc;AACdF,MAAAA,OAAO,CAACC,GAAR,CAAYC,KAAZ;AACD;AACF;;AACDC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,gBACG,KAAKT,KAAL,CAAWU,KAAX,CAAiBC,SAAjB,CAA2BA,SAA3B,gBACC,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,cADD,gBAGC,QAAC,WAAD;AAAa,QAAA,KAAK,EAAE,KAAKX,KAAL,CAAWU,KAA/B;AAAsC,QAAA,OAAO,EAAE,KAAKV,KAAL,CAAWL;AAA1D;AAAA;AAAA;AAAA;AAAA;AAJJ;AAAA;AAAA;AAAA;AAAA,YADF;AASD;;AAvBgD;;AAyBnD,MAAMiB,eAAe,GAAIF,KAAD,IAAW;AACjC,SAAO;AACLA,IAAAA,KAAK,EAAEA;AADF,GAAP;AAGD,CAJD;;AAKA,MAAMG,kBAAkB,GAAIC,QAAD,IAAc;AACvC,SAAO;AACLnB,IAAAA,OAAO,EAAGgB,SAAD,IAAeG,QAAQ,CAACnB,OAAO,CAACgB,SAAD,CAAR;AAD3B,GAAP;AAGD,CAJD;;AAKA,eAAenB,OAAO,CACpBoB,eADoB,EAEpBC,kBAFoB,CAAP,CAGbhB,oBAHa,CAAf","sourcesContent":["import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport $api from \"../../../Http/index.js\";\r\nimport CoursesMenu from \"./CoursesMenu.jsx\";\r\nimport { loading } from \"../../Redux/Reducers/loadingReducer.js\";\r\n\r\nimport Preloader from \"../../../Assets/Preloader/PreloaderPage.jsx\";\r\nclass CoursesMenuContainer extends React.Component {\r\n  login({ password, email }, props) {\r\n    try {\r\n      props.loading(true);\r\n      $api.post(\"/login\", { email, password }).then((response) => {\r\n        console.log(response);\r\n\r\n        props.loading(false);\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        {this.props.state.isLoading.isLoading ? (\r\n          <Preloader />\r\n        ) : (\r\n          <CoursesMenu state={this.props.state} loading={this.props.loading} />\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    state: state,\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    loading: (isLoading) => dispatch(loading(isLoading)),\r\n  };\r\n};\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(CoursesMenuContainer);\r\n"]},"metadata":{},"sourceType":"module"}