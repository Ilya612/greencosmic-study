{"ast":null,"code":"import * as axios from \"axios\"; //import authMiddleware from \"../../../Backend/Middleware/authMiddleware.js\";\n\nimport store from \"../Redux/reduxStore.js\";\nexport const API_URL = \"http://localhost:3001/api\";\nconst $api = axios.create({\n  withCredentials: true,\n  baseURL: API_URL\n});\n$api.interceptors.request.use(config => {\n  config.headers.Authorization = \"Bearer \" + store.getState().user.token;\n  console.log(config);\n  return config;\n});\n$api.interceptors.response.use(config => {\n  return config;\n}, async error => {\n  const originalRequest = error.config;\n\n  if (error.response.status === 401 && error.config && !error.config._isRetry) {\n    originalRequest._isRetry = true;\n\n    try {\n      const response = await $api.get(\"/refresh\");\n      store.getState().user.token = response.accessToken;\n      return $api.request(originalRequest);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  throw error;\n});\nexport default $api;","map":{"version":3,"sources":["A:/WorkPorjects/Skill Box/test 0/Frontend/src/Http/index.js"],"names":["axios","store","API_URL","$api","create","withCredentials","baseURL","interceptors","request","use","config","headers","Authorization","getState","user","token","console","log","response","error","originalRequest","status","_isRetry","get","accessToken"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB,C,CACA;;AACA,OAAOC,KAAP,MAAkB,wBAAlB;AACA,OAAO,MAAMC,OAAO,GAAG,2BAAhB;AAEP,MAAMC,IAAI,GAAGH,KAAK,CAACI,MAAN,CAAa;AACxBC,EAAAA,eAAe,EAAE,IADO;AAExBC,EAAAA,OAAO,EAAEJ;AAFe,CAAb,CAAb;AAIAC,IAAI,CAACI,YAAL,CAAkBC,OAAlB,CAA0BC,GAA1B,CAA+BC,MAAD,IAAY;AACxCA,EAAAA,MAAM,CAACC,OAAP,CAAeC,aAAf,GAA+B,YAAYX,KAAK,CAACY,QAAN,GAAiBC,IAAjB,CAAsBC,KAAjE;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYP,MAAZ;AACA,SAAOA,MAAP;AACD,CAJD;AAKAP,IAAI,CAACI,YAAL,CAAkBW,QAAlB,CAA2BT,GAA3B,CACGC,MAAD,IAAY;AACV,SAAOA,MAAP;AACD,CAHH,EAIE,MAAOS,KAAP,IAAiB;AACf,QAAMC,eAAe,GAAGD,KAAK,CAACT,MAA9B;;AAEA,MACES,KAAK,CAACD,QAAN,CAAeG,MAAf,KAA0B,GAA1B,IACAF,KAAK,CAACT,MADN,IAEA,CAACS,KAAK,CAACT,MAAN,CAAaY,QAHhB,EAIE;AACAF,IAAAA,eAAe,CAACE,QAAhB,GAA2B,IAA3B;;AACA,QAAI;AACF,YAAMJ,QAAQ,GAAG,MAAMf,IAAI,CAACoB,GAAL,CAAS,UAAT,CAAvB;AACAtB,MAAAA,KAAK,CAACY,QAAN,GAAiBC,IAAjB,CAAsBC,KAAtB,GAA8BG,QAAQ,CAACM,WAAvC;AACA,aAAOrB,IAAI,CAACK,OAAL,CAAaY,eAAb,CAAP;AACD,KAJD,CAIE,OAAOD,KAAP,EAAc;AACdH,MAAAA,OAAO,CAACC,GAAR,CAAYE,KAAZ;AACD;AACF;;AACD,QAAMA,KAAN;AACD,CAtBH;AAwBA,eAAehB,IAAf","sourcesContent":["import * as axios from \"axios\";\r\n//import authMiddleware from \"../../../Backend/Middleware/authMiddleware.js\";\r\nimport store from \"../Redux/reduxStore.js\";\r\nexport const API_URL = \"http://localhost:3001/api\";\r\n\r\nconst $api = axios.create({\r\n  withCredentials: true,\r\n  baseURL: API_URL,\r\n});\r\n$api.interceptors.request.use((config) => {\r\n  config.headers.Authorization = \"Bearer \" + store.getState().user.token;\r\n  console.log(config);\r\n  return config;\r\n});\r\n$api.interceptors.response.use(\r\n  (config) => {\r\n    return config;\r\n  },\r\n  async (error) => {\r\n    const originalRequest = error.config;\r\n\r\n    if (\r\n      error.response.status === 401 &&\r\n      error.config &&\r\n      !error.config._isRetry\r\n    ) {\r\n      originalRequest._isRetry = true;\r\n      try {\r\n        const response = await $api.get(\"/refresh\");\r\n        store.getState().user.token = response.accessToken;\r\n        return $api.request(originalRequest);\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    }\r\n    throw error;\r\n  }\r\n);\r\nexport default $api;\r\n"]},"metadata":{},"sourceType":"module"}