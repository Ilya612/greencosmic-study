{"ast":null,"code":"//const SET_ROLE = \"SET_ROLE\";\nconst SET_USER = \"SET_USER\";\nconst GET_USER = \"GET_USER\";\nconst LOADING = \"LOADING\";\nconst AUTH = \"AUTH\";\nlet initialState = {\n  token: \"\",\n  username: \"\",\n  isLoading: false\n};\n\nconst userReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case SET_USER:\n      return { ...state,\n        token: action.token,\n        username: action.username,\n        isLoading: false\n      };\n\n    case GET_USER:\n      debugger;\n      console.log(state);\n      break;\n\n    case LOADING:\n      return { ...state,\n        isLoading: action.isLoading\n      };\n\n    case AUTH:\n      return;\n\n    default:\n      return state;\n  }\n};\n\nexport default userReducer;\nexport const setUser = user => ({\n  type: SET_USER,\n  user\n});\nexport const getUser = () => ({\n  type: GET_USER\n});\nexport const loading = isLoading => ({\n  type: LOADING,\n  isLoading\n});\nexport const auth = token => ({\n  type: AUTH,\n  token\n});","map":{"version":3,"sources":["A:/WorkPorjects/Skill Box/test 0/Frontend/src/Redux/Reducers/userReducer.js"],"names":["SET_USER","GET_USER","LOADING","AUTH","initialState","token","username","isLoading","userReducer","state","action","type","console","log","setUser","user","getUser","loading","auth"],"mappings":"AAAA;AACA,MAAMA,QAAQ,GAAG,UAAjB;AACA,MAAMC,QAAQ,GAAG,UAAjB;AACA,MAAMC,OAAO,GAAG,SAAhB;AACA,MAAMC,IAAI,GAAG,MAAb;AAEA,IAAIC,YAAY,GAAG;AACjBC,EAAAA,KAAK,EAAE,EADU;AAEjBC,EAAAA,QAAQ,EAAE,EAFO;AAGjBC,EAAAA,SAAS,EAAE;AAHM,CAAnB;;AAMA,MAAMC,WAAW,GAAG,YAAkC;AAAA,MAAjCC,KAAiC,uEAAzBL,YAAyB;AAAA,MAAXM,MAAW;;AACpD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKX,QAAL;AACE,aAAO,EACL,GAAGS,KADE;AAELJ,QAAAA,KAAK,EAAEK,MAAM,CAACL,KAFT;AAGLC,QAAAA,QAAQ,EAAEI,MAAM,CAACJ,QAHZ;AAILC,QAAAA,SAAS,EAAE;AAJN,OAAP;;AAMF,SAAKN,QAAL;AACE;AACAW,MAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAZ;AACA;;AACF,SAAKP,OAAL;AACE,aAAO,EACL,GAAGO,KADE;AAELF,QAAAA,SAAS,EAAEG,MAAM,CAACH;AAFb,OAAP;;AAIF,SAAKJ,IAAL;AACE;;AACF;AACE,aAAOM,KAAP;AApBJ;AAsBD,CAvBD;;AAyBA,eAAeD,WAAf;AAEA,OAAO,MAAMM,OAAO,GAAIC,IAAD,KAAW;AAChCJ,EAAAA,IAAI,EAAEX,QAD0B;AAEhCe,EAAAA;AAFgC,CAAX,CAAhB;AAIP,OAAO,MAAMC,OAAO,GAAG,OAAO;AAC5BL,EAAAA,IAAI,EAAEV;AADsB,CAAP,CAAhB;AAGP,OAAO,MAAMgB,OAAO,GAAIV,SAAD,KAAgB;AACrCI,EAAAA,IAAI,EAAET,OAD+B;AAErCK,EAAAA;AAFqC,CAAhB,CAAhB;AAIP,OAAO,MAAMW,IAAI,GAAIb,KAAD,KAAY;AAC9BM,EAAAA,IAAI,EAAER,IADwB;AAE9BE,EAAAA;AAF8B,CAAZ,CAAb","sourcesContent":["//const SET_ROLE = \"SET_ROLE\";\r\nconst SET_USER = \"SET_USER\";\r\nconst GET_USER = \"GET_USER\";\r\nconst LOADING = \"LOADING\";\r\nconst AUTH = \"AUTH\";\r\n\r\nlet initialState = {\r\n  token: \"\",\r\n  username: \"\",\r\n  isLoading: false,\r\n};\r\n\r\nconst userReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_USER:\r\n      return {\r\n        ...state,\r\n        token: action.token,\r\n        username: action.username,\r\n        isLoading: false,\r\n      };\r\n    case GET_USER:\r\n      debugger;\r\n      console.log(state);\r\n      break;\r\n    case LOADING:\r\n      return {\r\n        ...state,\r\n        isLoading: action.isLoading,\r\n      };\r\n    case AUTH:\r\n      return;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default userReducer;\r\n\r\nexport const setUser = (user) => ({\r\n  type: SET_USER,\r\n  user,\r\n});\r\nexport const getUser = () => ({\r\n  type: GET_USER,\r\n});\r\nexport const loading = (isLoading) => ({\r\n  type: LOADING,\r\n  isLoading,\r\n});\r\nexport const auth = (token) => ({\r\n  type: AUTH,\r\n  token,\r\n});\r\n"]},"metadata":{},"sourceType":"module"}