{"ast":null,"code":"var _jsxFileName = \"A:\\\\WorkPorjects\\\\Skill Box\\\\test 0\\\\Frontend\\\\src\\\\Components\\\\Authentication\\\\LoginContainer.jsx\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport $api from \"../../Http/index.js\";\nimport { setUser, getUser } from \"../../Redux/Reducers/userReducer.js\";\nimport Login from \"./Login.jsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass LoginContainer extends React.Component {\n  login(_ref, props) {\n    let {\n      password,\n      email\n    } = _ref;\n\n    try {\n      props.loading(true);\n      $api.post(\"/login\", {\n        email,\n        password\n      }).then(response => {\n        let user = {\n          token: response.data.accessToken,\n          username: response.data.user.username\n        };\n        props.setUser(user);\n        props.loading(false);\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Login, {\n        state: this.props.state,\n        registration: this.login,\n        setUser: this.props.setUser\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    state: state\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setUser: user => dispatch(setUser(user)),\n    getUser: () => dispatch(getUser())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginContainer);","map":{"version":3,"sources":["A:/WorkPorjects/Skill Box/test 0/Frontend/src/Components/Authentication/LoginContainer.jsx"],"names":["React","connect","$api","setUser","getUser","Login","LoginContainer","Component","login","props","password","email","loading","post","then","response","user","token","data","accessToken","username","error","console","log","render","state","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,IAAP,MAAiB,qBAAjB;AACA,SAASC,OAAT,EAAkBC,OAAlB,QAAiC,qCAAjC;AACA,OAAOC,KAAP,MAAkB,aAAlB;;;AAEA,MAAMC,cAAN,SAA6BN,KAAK,CAACO,SAAnC,CAA6C;AAC3CC,EAAAA,KAAK,OAAsBC,KAAtB,EAA6B;AAAA,QAA5B;AAAEC,MAAAA,QAAF;AAAYC,MAAAA;AAAZ,KAA4B;;AAChC,QAAI;AACFF,MAAAA,KAAK,CAACG,OAAN,CAAc,IAAd;AACAV,MAAAA,IAAI,CAACW,IAAL,CAAU,QAAV,EAAoB;AAAEF,QAAAA,KAAF;AAASD,QAAAA;AAAT,OAApB,EAAyCI,IAAzC,CAA+CC,QAAD,IAAc;AAC1D,YAAIC,IAAI,GAAG;AACTC,UAAAA,KAAK,EAAEF,QAAQ,CAACG,IAAT,CAAcC,WADZ;AAETC,UAAAA,QAAQ,EAAEL,QAAQ,CAACG,IAAT,CAAcF,IAAd,CAAmBI;AAFpB,SAAX;AAIAX,QAAAA,KAAK,CAACN,OAAN,CAAca,IAAd;AACAP,QAAAA,KAAK,CAACG,OAAN,CAAc,KAAd;AACD,OAPD;AAQD,KAVD,CAUE,OAAOS,KAAP,EAAc;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD;AACF;;AACDG,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,6BACE,QAAC,KAAD;AACE,QAAA,KAAK,EAAE,KAAKf,KAAL,CAAWgB,KADpB;AAEE,QAAA,YAAY,EAAE,KAAKjB,KAFrB;AAGE,QAAA,OAAO,EAAE,KAAKC,KAAL,CAAWN;AAHtB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AASD;;AA1B0C;;AA4B7C,MAAMuB,eAAe,GAAID,KAAD,IAAW;AACjC,SAAO;AACLA,IAAAA,KAAK,EAAEA;AADF,GAAP;AAGD,CAJD;;AAKA,MAAME,kBAAkB,GAAIC,QAAD,IAAc;AACvC,SAAO;AACLzB,IAAAA,OAAO,EAAGa,IAAD,IAAUY,QAAQ,CAACzB,OAAO,CAACa,IAAD,CAAR,CADtB;AAELZ,IAAAA,OAAO,EAAE,MAAMwB,QAAQ,CAACxB,OAAO,EAAR;AAFlB,GAAP;AAID,CALD;;AAMA,eAAeH,OAAO,CAACyB,eAAD,EAAkBC,kBAAlB,CAAP,CAA6CrB,cAA7C,CAAf","sourcesContent":["import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport $api from \"../../Http/index.js\";\r\nimport { setUser, getUser } from \"../../Redux/Reducers/userReducer.js\";\r\nimport Login from \"./Login.jsx\";\r\n\r\nclass LoginContainer extends React.Component {\r\n  login({ password, email }, props) {\r\n    try {\r\n      props.loading(true);\r\n      $api.post(\"/login\", { email, password }).then((response) => {\r\n        let user = {\r\n          token: response.data.accessToken,\r\n          username: response.data.user.username,\r\n        };\r\n        props.setUser(user);\r\n        props.loading(false);\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Login\r\n          state={this.props.state}\r\n          registration={this.login}\r\n          setUser={this.props.setUser}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    state: state,\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    setUser: (user) => dispatch(setUser(user)),\r\n    getUser: () => dispatch(getUser()),\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginContainer);\r\n"]},"metadata":{},"sourceType":"module"}