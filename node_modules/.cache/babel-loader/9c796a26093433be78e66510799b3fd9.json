{"ast":null,"code":"const SET_COURSES = \"SET_COURSES\";\nconst ADD_STEP = \"ADD_STEP\";\nconst CREATE_COURSE = \"CREATE_COURSE\";\nconst UPDATE_COURSE = \"UPDATE_COURSE\";\nlet initialState = {\n  courses: [],\n  stepsLength: []\n};\n\nconst courseReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case SET_COURSES:\n      return { ...state,\n        courses: action.value\n      };\n\n    case ADD_STEP:\n      let stepsLength = state.stepsLength;\n      stepsLength.push(action.value);\n      return { ...state,\n        stepsLength: stepsLength\n      };\n\n    case CREATE_COURSE:\n      return { ...state,\n        courses: action.value\n      };\n\n    case UPDATE_COURSE:\n      if (state.courses.length === 0) {\n        state.courses.push(action.value);\n        return { ...state,\n          courses: state.courses\n        };\n      }\n\n      for (let i = 0; i < state.courses.length; i++) {\n        if (state.courses[i].id === action.value.id) {\n          state.courses.splice(i, 1);\n          createCourse(stepArray);\n        } else if (i === state.courses.length - 1) {\n          state.courses.push(action.value);\n          createCourse(stepArray);\n          break;\n        }\n      }\n\n      return;\n\n    default:\n      return state;\n  }\n};\n\nexport default courseReducer;\nexport const setCourses = value => ({\n  type: SET_COURSES,\n  value\n});\nexport const addStep = value => ({\n  type: ADD_STEP,\n  value\n});\nexport const createCourse = value => ({\n  type: CREATE_COURSE,\n  value\n});","map":{"version":3,"sources":["A:/WorkPorjects/Skill Box/test 0/Frontend/src/Redux/Reducers/coursesReducer.js"],"names":["SET_COURSES","ADD_STEP","CREATE_COURSE","UPDATE_COURSE","initialState","courses","stepsLength","courseReducer","state","action","type","value","push","length","i","id","splice","createCourse","stepArray","setCourses","addStep"],"mappings":"AAAA,MAAMA,WAAW,GAAG,aAApB;AACA,MAAMC,QAAQ,GAAG,UAAjB;AACA,MAAMC,aAAa,GAAG,eAAtB;AACA,MAAMC,aAAa,GAAG,eAAtB;AAEA,IAAIC,YAAY,GAAG;AACjBC,EAAAA,OAAO,EAAE,EADQ;AAEjBC,EAAAA,WAAW,EAAE;AAFI,CAAnB;;AAKA,MAAMC,aAAa,GAAG,YAAkC;AAAA,MAAjCC,KAAiC,uEAAzBJ,YAAyB;AAAA,MAAXK,MAAW;;AACtD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKV,WAAL;AACE,aAAO,EACL,GAAGQ,KADE;AAELH,QAAAA,OAAO,EAAEI,MAAM,CAACE;AAFX,OAAP;;AAIF,SAAKV,QAAL;AACE,UAAIK,WAAW,GAAGE,KAAK,CAACF,WAAxB;AACAA,MAAAA,WAAW,CAACM,IAAZ,CAAiBH,MAAM,CAACE,KAAxB;AACA,aAAO,EACL,GAAGH,KADE;AAELF,QAAAA,WAAW,EAAEA;AAFR,OAAP;;AAIF,SAAKJ,aAAL;AACE,aAAO,EACL,GAAGM,KADE;AAELH,QAAAA,OAAO,EAAEI,MAAM,CAACE;AAFX,OAAP;;AAIF,SAAKR,aAAL;AACE,UAAIK,KAAK,CAACH,OAAN,CAAcQ,MAAd,KAAyB,CAA7B,EAAgC;AAC9BL,QAAAA,KAAK,CAACH,OAAN,CAAcO,IAAd,CAAmBH,MAAM,CAACE,KAA1B;AAEA,eAAO,EACL,GAAGH,KADE;AAELH,UAAAA,OAAO,EAAEG,KAAK,CAACH;AAFV,SAAP;AAID;;AACD,WAAK,IAAIS,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGN,KAAK,CAACH,OAAN,CAAcQ,MAAlC,EAA0CC,CAAC,EAA3C,EAA+C;AAC7C,YAAIN,KAAK,CAACH,OAAN,CAAcS,CAAd,EAAiBC,EAAjB,KAAwBN,MAAM,CAACE,KAAP,CAAaI,EAAzC,EAA6C;AAC3CP,UAAAA,KAAK,CAACH,OAAN,CAAcW,MAAd,CAAqBF,CAArB,EAAwB,CAAxB;AACAG,UAAAA,YAAY,CAACC,SAAD,CAAZ;AACD,SAHD,MAGO,IAAIJ,CAAC,KAAKN,KAAK,CAACH,OAAN,CAAcQ,MAAd,GAAuB,CAAjC,EAAoC;AACzCL,UAAAA,KAAK,CAACH,OAAN,CAAcO,IAAd,CAAmBH,MAAM,CAACE,KAA1B;AACAM,UAAAA,YAAY,CAACC,SAAD,CAAZ;AACA;AACD;AACF;;AACD;;AACF;AACE,aAAOV,KAAP;AAvCJ;AAyCD,CA1CD;;AA4CA,eAAeD,aAAf;AACA,OAAO,MAAMY,UAAU,GAAIR,KAAD,KAAY;AACpCD,EAAAA,IAAI,EAAEV,WAD8B;AAEpCW,EAAAA;AAFoC,CAAZ,CAAnB;AAIP,OAAO,MAAMS,OAAO,GAAIT,KAAD,KAAY;AACjCD,EAAAA,IAAI,EAAET,QAD2B;AAEjCU,EAAAA;AAFiC,CAAZ,CAAhB;AAIP,OAAO,MAAMM,YAAY,GAAIN,KAAD,KAAY;AACtCD,EAAAA,IAAI,EAAER,aADgC;AAEtCS,EAAAA;AAFsC,CAAZ,CAArB","sourcesContent":["const SET_COURSES = \"SET_COURSES\";\r\nconst ADD_STEP = \"ADD_STEP\";\r\nconst CREATE_COURSE = \"CREATE_COURSE\";\r\nconst UPDATE_COURSE = \"UPDATE_COURSE\";\r\n\r\nlet initialState = {\r\n  courses: [],\r\n  stepsLength: [],\r\n};\r\n\r\nconst courseReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_COURSES:\r\n      return {\r\n        ...state,\r\n        courses: action.value,\r\n      };\r\n    case ADD_STEP:\r\n      let stepsLength = state.stepsLength;\r\n      stepsLength.push(action.value);\r\n      return {\r\n        ...state,\r\n        stepsLength: stepsLength,\r\n      };\r\n    case CREATE_COURSE:\r\n      return {\r\n        ...state,\r\n        courses: action.value,\r\n      };\r\n    case UPDATE_COURSE:\r\n      if (state.courses.length === 0) {\r\n        state.courses.push(action.value);\r\n\r\n        return {\r\n          ...state,\r\n          courses: state.courses,\r\n        };\r\n      }\r\n      for (let i = 0; i < state.courses.length; i++) {\r\n        if (state.courses[i].id === action.value.id) {\r\n          state.courses.splice(i, 1);\r\n          createCourse(stepArray);\r\n        } else if (i === state.courses.length - 1) {\r\n          state.courses.push(action.value);\r\n          createCourse(stepArray);\r\n          break;\r\n        }\r\n      }\r\n      return;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default courseReducer;\r\nexport const setCourses = (value) => ({\r\n  type: SET_COURSES,\r\n  value,\r\n});\r\nexport const addStep = (value) => ({\r\n  type: ADD_STEP,\r\n  value,\r\n});\r\nexport const createCourse = (value) => ({\r\n  type: CREATE_COURSE,\r\n  value,\r\n});\r\n"]},"metadata":{},"sourceType":"module"}