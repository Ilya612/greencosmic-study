{"ast":null,"code":"//const SET_ROLE = \"SET_ROLE\";\nimport AuthService from \"../../Service/authService.js\";\nconst SET_USER = \"SET_USER\";\nconst GET_USER = \"GET_USER\";\nconst LOADING = \"LOADING\";\nconst AUTH = \"AUTH\";\nlet initialState = {\n  token: \"\",\n  username: \"\"\n};\n\nconst userReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case SET_USER:\n      return { ...state,\n        token: action.token,\n        username: action.username,\n        isLoading: false\n      };\n\n    case GET_USER:\n      debugger;\n      console.log(state);\n      break;\n\n    case LOADING:\n      return { ...state,\n        isLoading: action.isLoading\n      };\n\n    case AUTH:\n      AuthService();\n      return;\n\n    default:\n      return state;\n  }\n};\n\nexport default userReducer;\nexport const setUser = user => ({\n  type: SET_USER,\n  user\n});\nexport const getUser = () => ({\n  type: GET_USER\n});\nexport const auth = token => ({\n  type: AUTH,\n  token\n});","map":{"version":3,"sources":["A:/WorkPorjects/Skill Box/test 0/Frontend/src/Redux/Reducers/userReducer.js"],"names":["AuthService","SET_USER","GET_USER","LOADING","AUTH","initialState","token","username","userReducer","state","action","type","isLoading","console","log","setUser","user","getUser","auth"],"mappings":"AAAA;AACA,OAAOA,WAAP,MAAwB,8BAAxB;AAEA,MAAMC,QAAQ,GAAG,UAAjB;AACA,MAAMC,QAAQ,GAAG,UAAjB;AACA,MAAMC,OAAO,GAAG,SAAhB;AACA,MAAMC,IAAI,GAAG,MAAb;AAEA,IAAIC,YAAY,GAAG;AACjBC,EAAAA,KAAK,EAAE,EADU;AAEjBC,EAAAA,QAAQ,EAAE;AAFO,CAAnB;;AAKA,MAAMC,WAAW,GAAG,YAAkC;AAAA,MAAjCC,KAAiC,uEAAzBJ,YAAyB;AAAA,MAAXK,MAAW;;AACpD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKV,QAAL;AACE,aAAO,EACL,GAAGQ,KADE;AAELH,QAAAA,KAAK,EAAEI,MAAM,CAACJ,KAFT;AAGLC,QAAAA,QAAQ,EAAEG,MAAM,CAACH,QAHZ;AAILK,QAAAA,SAAS,EAAE;AAJN,OAAP;;AAMF,SAAKV,QAAL;AACE;AACAW,MAAAA,OAAO,CAACC,GAAR,CAAYL,KAAZ;AACA;;AACF,SAAKN,OAAL;AACE,aAAO,EACL,GAAGM,KADE;AAELG,QAAAA,SAAS,EAAEF,MAAM,CAACE;AAFb,OAAP;;AAIF,SAAKR,IAAL;AACEJ,MAAAA,WAAW;AACX;;AACF;AACE,aAAOS,KAAP;AArBJ;AAuBD,CAxBD;;AA0BA,eAAeD,WAAf;AAEA,OAAO,MAAMO,OAAO,GAAIC,IAAD,KAAW;AAChCL,EAAAA,IAAI,EAAEV,QAD0B;AAEhCe,EAAAA;AAFgC,CAAX,CAAhB;AAIP,OAAO,MAAMC,OAAO,GAAG,OAAO;AAC5BN,EAAAA,IAAI,EAAET;AADsB,CAAP,CAAhB;AAIP,OAAO,MAAMgB,IAAI,GAAIZ,KAAD,KAAY;AAC9BK,EAAAA,IAAI,EAAEP,IADwB;AAE9BE,EAAAA;AAF8B,CAAZ,CAAb","sourcesContent":["//const SET_ROLE = \"SET_ROLE\";\r\nimport AuthService from \"../../Service/authService.js\";\r\n\r\nconst SET_USER = \"SET_USER\";\r\nconst GET_USER = \"GET_USER\";\r\nconst LOADING = \"LOADING\";\r\nconst AUTH = \"AUTH\";\r\n\r\nlet initialState = {\r\n  token: \"\",\r\n  username: \"\",\r\n};\r\n\r\nconst userReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_USER:\r\n      return {\r\n        ...state,\r\n        token: action.token,\r\n        username: action.username,\r\n        isLoading: false,\r\n      };\r\n    case GET_USER:\r\n      debugger;\r\n      console.log(state);\r\n      break;\r\n    case LOADING:\r\n      return {\r\n        ...state,\r\n        isLoading: action.isLoading,\r\n      };\r\n    case AUTH:\r\n      AuthService();\r\n      return;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default userReducer;\r\n\r\nexport const setUser = (user) => ({\r\n  type: SET_USER,\r\n  user,\r\n});\r\nexport const getUser = () => ({\r\n  type: GET_USER,\r\n});\r\n\r\nexport const auth = (token) => ({\r\n  type: AUTH,\r\n  token,\r\n});\r\n"]},"metadata":{},"sourceType":"module"}